/*
 * RESERVATION SERVICE REST API
 * API for the Reservation Service. The API covers the functionality to create, read and update reservations and their metadata stored in the DAM metadata store, add and remove assets from the reservations.  The API is based on REST and only consumes JSON requests.  **Security**  This API is protected via the standard OIDC authentication provided by MIT. In order to use the API, an access token must be retrieved first and then used in the Authorization header with \"Bearer [Access Token]\". 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rs.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Structure of the Reservation Service error
 */
@ApiModel(description = "Structure of the Reservation Service error")

public class ReservationServiceError {
  @SerializedName("errorCode")
  private String errorCode = null;

  @SerializedName("errorMessage")
  private String errorMessage = null;

  @SerializedName("errorId")
  private String errorId = null;

  public ReservationServiceError errorCode(String errorCode) {
    this.errorCode = errorCode;
    return this;
  }

   /**
   * The error code
   * @return errorCode
  **/
  @ApiModelProperty(required = true, value = "The error code")
  public String getErrorCode() {
    return errorCode;
  }

  public void setErrorCode(String errorCode) {
    this.errorCode = errorCode;
  }

  public ReservationServiceError errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

   /**
   * Description of the error
   * @return errorMessage
  **/
  @ApiModelProperty(required = true, value = "Description of the error")
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }

  public ReservationServiceError errorId(String errorId) {
    this.errorId = errorId;
    return this;
  }

   /**
   * The id of the error
   * @return errorId
  **/
  @ApiModelProperty(required = true, value = "The id of the error")
  public String getErrorId() {
    return errorId;
  }

  public void setErrorId(String errorId) {
    this.errorId = errorId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReservationServiceError reservationServiceError = (ReservationServiceError) o;
    return Objects.equals(this.errorCode, reservationServiceError.errorCode) &&
        Objects.equals(this.errorMessage, reservationServiceError.errorMessage) &&
        Objects.equals(this.errorId, reservationServiceError.errorId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(errorCode, errorMessage, errorId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReservationServiceError {\n");
    
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    errorId: ").append(toIndentedString(errorId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

