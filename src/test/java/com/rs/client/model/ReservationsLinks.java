/*
 * RESERVATION SERVICE REST API
 * API for the Reservation Service. The API covers the functionality to create, read and update reservations and their metadata stored in the DAM metadata store, add and remove assets from the reservations.  The API is based on REST and only consumes JSON requests.  **Security**  This API is protected via the standard OIDC authentication provided by MIT. In order to use the API, an access token must be retrieved first and then used in the Authorization header with \"Bearer [Access Token]\". 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rs.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.rs.client.model.Link;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Links node for the Metadata of the Reservations Entity
 */
@ApiModel(description = "Links node for the Metadata of the Reservations Entity")

public class ReservationsLinks {
  @SerializedName("next")
  private Link next = null;

  @SerializedName("self")
  private Link self = null;

  @SerializedName("suggestions")
  private Link suggestions = null;

  @SerializedName("facets")
  private Link facets = null;

  public ReservationsLinks next(Link next) {
    this.next = next;
    return this;
  }

   /**
   * Get next
   * @return next
  **/
  @ApiModelProperty(required = true, value = "")
  public Link getNext() {
    return next;
  }

  public void setNext(Link next) {
    this.next = next;
  }

  public ReservationsLinks self(Link self) {
    this.self = self;
    return this;
  }

   /**
   * Get self
   * @return self
  **/
  @ApiModelProperty(required = true, value = "")
  public Link getSelf() {
    return self;
  }

  public void setSelf(Link self) {
    this.self = self;
  }

  public ReservationsLinks suggestions(Link suggestions) {
    this.suggestions = suggestions;
    return this;
  }

   /**
   * Get suggestions
   * @return suggestions
  **/
  @ApiModelProperty(required = true, value = "")
  public Link getSuggestions() {
    return suggestions;
  }

  public void setSuggestions(Link suggestions) {
    this.suggestions = suggestions;
  }

  public ReservationsLinks facets(Link facets) {
    this.facets = facets;
    return this;
  }

   /**
   * Get facets
   * @return facets
  **/
  @ApiModelProperty(required = true, value = "")
  public Link getFacets() {
    return facets;
  }

  public void setFacets(Link facets) {
    this.facets = facets;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReservationsLinks reservationsLinks = (ReservationsLinks) o;
    return Objects.equals(this.next, reservationsLinks.next) &&
        Objects.equals(this.self, reservationsLinks.self) &&
        Objects.equals(this.suggestions, reservationsLinks.suggestions) &&
        Objects.equals(this.facets, reservationsLinks.facets);
  }

  @Override
  public int hashCode() {
    return Objects.hash(next, self, suggestions, facets);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReservationsLinks {\n");
    
    sb.append("    next: ").append(toIndentedString(next)).append("\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    suggestions: ").append(toIndentedString(suggestions)).append("\n");
    sb.append("    facets: ").append(toIndentedString(facets)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

