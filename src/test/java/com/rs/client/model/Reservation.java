/*
 * RESERVATION SERVICE REST API
 * API for the Reservation Service. The API covers the functionality to create, read and update reservations and their metadata stored in the DAM metadata store, add and remove assets from the reservations.  The API is based on REST and only consumes JSON requests.  **Security**  This API is protected via the standard OIDC authentication provided by MIT. In order to use the API, an access token must be retrieved first and then used in the Authorization header with \"Bearer [Access Token]\". 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rs.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.rs.client.model.ReservationMeta;
import com.rs.client.model.ReservationStatus;
import com.rs.client.model.Type;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * A reservation
 */
@ApiModel(description = "A reservation")

public class Reservation {
  @SerializedName("_meta")
  private ReservationMeta meta = null;

  @SerializedName("_embedded")
  private Object embedded = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("type")
  private Type type = null;

  @SerializedName("status")
  private ReservationStatus status = null;

  @SerializedName("created")
  private String created = null;

  @SerializedName("lastModified")
  private String lastModified = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("assetsCount")
  private Integer assetsCount = null;

  @SerializedName("contactsCount")
  private Integer contactsCount = null;

  @SerializedName("documentsCount")
  private Integer documentsCount = null;

  public Reservation meta(ReservationMeta meta) {
    this.meta = meta;
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @ApiModelProperty(required = true, value = "")
  public ReservationMeta getMeta() {
    return meta;
  }

  public void setMeta(ReservationMeta meta) {
    this.meta = meta;
  }

  public Reservation embedded(Object embedded) {
    this.embedded = embedded;
    return this;
  }

   /**
   * Get embedded
   * @return embedded
  **/
  @ApiModelProperty(required = true, value = "")
  public Object getEmbedded() {
    return embedded;
  }

  public void setEmbedded(Object embedded) {
    this.embedded = embedded;
  }

  public Reservation id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Reservation type(Type type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(required = true, value = "")
  public Type getType() {
    return type;
  }

  public void setType(Type type) {
    this.type = type;
  }

  public Reservation status(ReservationStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(required = true, value = "")
  public ReservationStatus getStatus() {
    return status;
  }

  public void setStatus(ReservationStatus status) {
    this.status = status;
  }

  public Reservation created(String created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCreated() {
    return created;
  }

  public void setCreated(String created) {
    this.created = created;
  }

  public Reservation lastModified(String lastModified) {
    this.lastModified = lastModified;
    return this;
  }

   /**
   * Get lastModified
   * @return lastModified
  **/
  @ApiModelProperty(required = true, value = "")
  public String getLastModified() {
    return lastModified;
  }

  public void setLastModified(String lastModified) {
    this.lastModified = lastModified;
  }

  public Reservation description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(required = true, value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Reservation title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @ApiModelProperty(required = true, value = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Reservation assetsCount(Integer assetsCount) {
    this.assetsCount = assetsCount;
    return this;
  }

   /**
   * Get assetsCount
   * @return assetsCount
  **/
  @ApiModelProperty(value = "")
  public Integer getAssetsCount() {
    return assetsCount;
  }

  public void setAssetsCount(Integer assetsCount) {
    this.assetsCount = assetsCount;
  }

  public Reservation contactsCount(Integer contactsCount) {
    this.contactsCount = contactsCount;
    return this;
  }

   /**
   * Get contactsCount
   * @return contactsCount
  **/
  @ApiModelProperty(value = "")
  public Integer getContactsCount() {
    return contactsCount;
  }

  public void setContactsCount(Integer contactsCount) {
    this.contactsCount = contactsCount;
  }

  public Reservation documentsCount(Integer documentsCount) {
    this.documentsCount = documentsCount;
    return this;
  }

   /**
   * Get documentsCount
   * @return documentsCount
  **/
  @ApiModelProperty(value = "")
  public Integer getDocumentsCount() {
    return documentsCount;
  }

  public void setDocumentsCount(Integer documentsCount) {
    this.documentsCount = documentsCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Reservation reservation = (Reservation) o;
    return Objects.equals(this.meta, reservation.meta) &&
        Objects.equals(this.embedded, reservation.embedded) &&
        Objects.equals(this.id, reservation.id) &&
        Objects.equals(this.type, reservation.type) &&
        Objects.equals(this.status, reservation.status) &&
        Objects.equals(this.created, reservation.created) &&
        Objects.equals(this.lastModified, reservation.lastModified) &&
        Objects.equals(this.description, reservation.description) &&
        Objects.equals(this.title, reservation.title) &&
        Objects.equals(this.assetsCount, reservation.assetsCount) &&
        Objects.equals(this.contactsCount, reservation.contactsCount) &&
        Objects.equals(this.documentsCount, reservation.documentsCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(meta, embedded, id, type, status, created, lastModified, description, title, assetsCount, contactsCount, documentsCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Reservation {\n");
    
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    embedded: ").append(toIndentedString(embedded)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    lastModified: ").append(toIndentedString(lastModified)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    assetsCount: ").append(toIndentedString(assetsCount)).append("\n");
    sb.append("    contactsCount: ").append(toIndentedString(contactsCount)).append("\n");
    sb.append("    documentsCount: ").append(toIndentedString(documentsCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

