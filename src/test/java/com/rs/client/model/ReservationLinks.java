/*
 * RESERVATION SERVICE REST API
 * API for the Reservation Service. The API covers the functionality to create, read and update reservations and their metadata stored in the DAM metadata store, add and remove assets from the reservations.  The API is based on REST and only consumes JSON requests.  **Security**  This API is protected via the standard OIDC authentication provided by MIT. In order to use the API, an access token must be retrieved first and then used in the Authorization header with \"Bearer [Access Token]\". 
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rs.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.rs.client.model.Link;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Links node for the Metadata of the Reservation Entity
 */
@ApiModel(description = "Links node for the Metadata of the Reservation Entity")

public class ReservationLinks {
  @SerializedName("reservations")
  private Link reservations = null;

  @SerializedName("assets")
  private Link assets = null;

  @SerializedName("contacts")
  private Link contacts = null;

  @SerializedName("documents")
  private Link documents = null;

  @SerializedName("self")
  private Link self = null;

  @SerializedName("metadata")
  private Link metadata = null;

  public ReservationLinks reservations(Link reservations) {
    this.reservations = reservations;
    return this;
  }

   /**
   * Get reservations
   * @return reservations
  **/
  @ApiModelProperty(value = "")
  public Link getReservations() {
    return reservations;
  }

  public void setReservations(Link reservations) {
    this.reservations = reservations;
  }

  public ReservationLinks assets(Link assets) {
    this.assets = assets;
    return this;
  }

   /**
   * Get assets
   * @return assets
  **/
  @ApiModelProperty(required = true, value = "")
  public Link getAssets() {
    return assets;
  }

  public void setAssets(Link assets) {
    this.assets = assets;
  }

  public ReservationLinks contacts(Link contacts) {
    this.contacts = contacts;
    return this;
  }

   /**
   * Get contacts
   * @return contacts
  **/
  @ApiModelProperty(required = true, value = "")
  public Link getContacts() {
    return contacts;
  }

  public void setContacts(Link contacts) {
    this.contacts = contacts;
  }

  public ReservationLinks documents(Link documents) {
    this.documents = documents;
    return this;
  }

   /**
   * Get documents
   * @return documents
  **/
  @ApiModelProperty(value = "")
  public Link getDocuments() {
    return documents;
  }

  public void setDocuments(Link documents) {
    this.documents = documents;
  }

  public ReservationLinks self(Link self) {
    this.self = self;
    return this;
  }

   /**
   * Get self
   * @return self
  **/
  @ApiModelProperty(required = true, value = "")
  public Link getSelf() {
    return self;
  }

  public void setSelf(Link self) {
    this.self = self;
  }

  public ReservationLinks metadata(Link metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public Link getMetadata() {
    return metadata;
  }

  public void setMetadata(Link metadata) {
    this.metadata = metadata;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReservationLinks reservationLinks = (ReservationLinks) o;
    return Objects.equals(this.reservations, reservationLinks.reservations) &&
        Objects.equals(this.assets, reservationLinks.assets) &&
        Objects.equals(this.contacts, reservationLinks.contacts) &&
        Objects.equals(this.documents, reservationLinks.documents) &&
        Objects.equals(this.self, reservationLinks.self) &&
        Objects.equals(this.metadata, reservationLinks.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(reservations, assets, contacts, documents, self, metadata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReservationLinks {\n");
    
    sb.append("    reservations: ").append(toIndentedString(reservations)).append("\n");
    sb.append("    assets: ").append(toIndentedString(assets)).append("\n");
    sb.append("    contacts: ").append(toIndentedString(contacts)).append("\n");
    sb.append("    documents: ").append(toIndentedString(documents)).append("\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

